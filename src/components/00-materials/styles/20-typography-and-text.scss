// ==================
// Fonts & Typography
// ==================

// A simplified typography and text system.
// AXA use two font faces - Publico Headline and Source Sans Pro.
/// @link https://design.axa.com/web-guidelines/typography#overview

$base-font-size: 16px;
$base-line-height: $base-font-size * 1.5;

$font-family-source-sans: 'Source Sans Pro', Arial, sans-serif;
$font-family-publico: "Publico Headline", Georgia, serif;

$primary-font: $font-family-source-sans;
$secondary-font: $font-family-publico;

$font-size-base: $base-font-size;
$line-height-base: $base-line-height;

// 10-15px -> small
// 15-20px -> medium
// 20-30px -> large
// > 30 -> huge

$title-sizes: (
  default: (18, 20, -0.01em),
  medium: (16, 18, -0.01em),
  medium-1: (18, 20, -0.01em),
  large: (20, 26, -0.01em),
  large-1: (24, 29, -0.01em),
  large-2: (25, 29, -0.01em),
  large-3: (28, 32, -0.01em),
  huge: (30, 34, -0.01em),
  huge-1: (36, 42, -0.01em),
  huge-2: (48, 54, -0.01em),
  huge-3: (62, 72, -0.01em)
);

$text-sizes: (
  small: (13, 15, 0.02em),
  small-1: (14, 17, 0.02em),
  default: (14, 17, 0.02em),
  medium: (16, 24, 0.02em),
  medium-1: (18, 27, 0.01em),
  large: (20, 30, 0.01em),
  large-1: (28, 30, 0.01em)
);

$primary-fonts-styles: (
    default: (400, normal),
    regular: (400, normal),
    medium: (600, normal),
    bold: (700, normal),
    italic: (400, italic)
);

$secondary-fonts-styles: (
    default: (400, normal),
    light: (300, normal),
    regular: (400, normal)
);

// Don't use this in components, use typo()
@mixin _font($font: primary, $name: default, $important: null) {
  @if map-has-key($primary-fonts-styles, $name) and $font == primary {
    font-family: $primary-font $important;
    font-weight: nth(map-get($primary-fonts-styles, $name), 1) $important;
    font-style: nth(map-get($primary-fonts-styles, $name), 2) $important;
  }

  @else if map-has-key($secondary-fonts-styles, $name) and $font == secondary {
    font-family: $secondary-font $important;
    font-weight: nth(map-get($secondary-fonts-styles, $name), 1) $important;
    font-style: nth(map-get($secondary-fonts-styles, $name), 2) $important;
  }
}

// Don't use this in components, use typo()
@mixin _text($size: default, $important: null) {
    @if (map-has-key($text-sizes, $size)) {
        font-size: nth(map-get($text-sizes, $size), 1) + px $important;
        line-height: nth(map-get($text-sizes, $size), 2) + px $important;
        letter-spacing: nth(map-get($text-sizes, $size), 3) $important;
    }

    @else {
        font-size: nth(map-get($text-sizes, default), 1) + px $important;
        line-height: nth(map-get($text-sizes, default), 2) + px $important;
        letter-spacing: nth(map-get($text-sizes, default), 3) + px $important;
    }
}

//$important (optional) - possibility to set css !important (for example for ::slottet attributes)
@mixin typo($name: primary, $size: default, $style: default, $important: null) {
  @include _font($name, $style, $important);
  @include _text($size, $important);
}

@mixin typo-title($size: default, $family: $primary-font) {
  $font-style: $primary-fonts-styles;
  $font-family: $family;

  @if ($family == secondary) {
    $font-family: $secondary-font;
    $font-style: $secondary-fonts-styles;
  }

  font-family: $font-family;
  font-weight: nth(map-get($primary-fonts-styles, bold), 1);
  font-style: nth(map-get($primary-fonts-styles, default), 2);
  font-size: nth(map-get($title-sizes, $size), 1) + px;
  line-height: nth(map-get($title-sizes, $size), 2) + px;
  letter-spacing: nth(map-get($title-sizes, $size), 3);
}
