@import "../settings/button";
@import "../../../styles/functions/min-max";
@import "../../../styles/functions/color-map";
@import "../../../styles/animations/fade-out-right-in-left";
@import "../../../styles/mixins/hardware-accelerate";
@import "../../../styles/mixins/icon";
@import "../../../styles/mixins/respond";
@import "../../../styles/mixins/size";
@import "../../../styles/mixins/word-break";
@import "../../../styles/typo/typo-mixins";

// Buttons as specified at
// https://design.axa.com/web-guidelines/buttons-and-links
$color-button-bg--disabled: get-color($button-color, default, bg--disabled);
$color-button-text--disabled: get-color($button-color, default, text--disabled);
$color-button-arrow--disabled: get-color(
  $button-color,
  default,
  arrow--disabled
);
$color-button-icon--disabled: get-color($button-color, default, icon--disabled);
$color-button-border--disabled: get-color(
  $button-color,
  default,
  border--disabled
);

@mixin button($x-padding: $button-x-padding-default) {
  $x-padding: min-max($button-x-padding-min, $button-x-padding-max, $x-padding);

  @include word-break();
  @include typo-tag--semibold();

  position: relative;

  min-height: $button-md-height;
  padding: $button-padding-top-bottom-md $x-padding;
  border-width: $button-border-width;
  border-style: solid;

  text-decoration: none;
  text-transform: uppercase;
  vertical-align: middle;

  &:hover,
  &:active,
  &:focus {
    cursor: pointer;
    text-decoration: none;
    outline: none;
  }

  &:disabled,
  &[aria-disabled] {
    /* stylelint-disable-next-line declaration-no-important */
    cursor: default !important;
  }
}

@mixin button--fix-a-tag($display: inline-block) {
  @at-root {
    a#{&} {
      display: $display;
    }
  }
}

@mixin button--x-padding($x-padding: $button-x-padding-default) {
  $x-padding: min-max($button-x-padding-min, $button-x-padding-max, $x-padding);
  padding-right: $x-padding;

  padding-left: $x-padding;
}

@mixin button--color($style: default) {
  $color-button-text: get-color($button-color, $style, text);
  $color-button-bg: get-color($button-color, $style, bg);
  $color-button-bg--hover: get-color($button-color, $style, bg--hover);
  color: $color-button-text;

  background: $color-button-bg;
  border-color: $color-button-bg;
  border-bottom-color: $color-button-bg--hover;

  &:hover,
  &:active,
  &:focus {
    background: $color-button-bg--hover;
    border-color: $color-button-bg--hover;
    color: $color-button-text;
  }

  &:disabled,
  &[aria-disabled] {
    /* stylelint-disable declaration-no-important */
    color: $color-button-text--disabled !important;
    background: $color-button-bg--disabled !important;
    border-color: $color-button-bg--disabled !important;
    border-bottom-color: $color-button-border--disabled !important;
    /* stylelint-enable declaration-no-important */
  }
}

@mixin button--ghost($style: default) {
  $color-button-bg: get-color($button-color, $style, bg);
  $color-button-bg--hover: get-color($button-color, $style, bg--hover);
  $color-button-text--ghost: get-color($button-color, $style, text--ghost);
  $color-button-text--ghost--hover: get-color(
    $button-color,
    $style,
    text--ghost--hover
  );
  $color-button-bg--ghost: get-color($button-color, $style, bg--ghost);
  $color-button-bg--ghost--hover: get-color(
    $button-color,
    $style,
    bg--ghost--hover
  );

  color: $color-button-text--ghost;

  background: $color-button-bg--ghost;
  border-color: $color-button-bg;

  &:hover,
  &:active,
  &:focus {
    color: $color-button-text--ghost--hover;
    background: $color-button-bg--ghost--hover;

    @if $color-button-bg--ghost--hover != transparent {
      border-color: $color-button-bg--ghost--hover;
    } @else {
      border-color: $color-button-bg--hover;
    }
  }

  &:disabled,
  &[aria-disabled] {
    /* stylelint-disable-next-line declaration-no-important */
    background-color: $color-button-bg--disabled !important;
  }
}

@mixin button--sm() {
  @include typo-legals--semibold();

  min-height: $button-sm-height;
  padding-top: $button-padding-top-bottom-sm;
  padding-bottom: $button-padding-top-bottom-sm;

  border-width: $button-border-width--sm;
}

@mixin button--lg() {
  @include typo-secondary-text--semibold();

  min-height: $button-lg-height;
  padding-top: $button-padding-top-bottom-lg;
  padding-bottom: $button-padding-top-bottom-lg;
}

@mixin button--has-icon(
  $x-padding: $button-x-padding-default,
  $button-height: $button-md-height
) {
  $x-padding: min-max($button-x-padding-min, $button-x-padding-max, $x-padding);

  padding-right: $x-padding + $button-height;
  overflow: hidden;
}

@mixin button--has-icon--sm($x-padding: $button-x-padding-default) {
  @include button--has-icon($x-padding, $button-sm-height);
}

@mixin button--has-icon--lg($x-padding: $button-x-padding-default) {
  @include button--has-icon($x-padding, $button-lg-height);
}

@mixin button--only-icon() {
  /* stylelint-disable declaration-no-important */
  padding-top: 0 !important;
  padding-bottom: 0 !important;

  line-height: 1 !important;
  /* stylelint-enable declaration-no-important */
}

@mixin button__icon() {
  @include size($button-md-height);

  position: absolute;

  top: 0;
  right: 0;

  margin-top: -$button-border-width;
  margin-bottom: 0;

  height: calc(100% + #{$button-border-width});

  padding: $button__icon-padding;

  box-sizing: border-box;

  border-left: $button-border-width solid currentColor;
}

@mixin button__icon--sm() {
  @include size($button-sm-height);

  height: calc(100% + #{$button-border-width--sm});

  padding: $button__icon-padding--sm;

  margin-top: -$button-border-width--sm;

  border-left: $button-border-width--sm solid currentColor;
}

@mixin button__icon--lg() {
  @include size($button-lg-height);

  height: calc(100% + #{$button-border-width});

  padding: $button__icon-padding--lg;
}

@mixin button__icon--only() {
  @include size($button-md-height);

  position: relative;

  padding: $button__icon-padding;

  // undo border
  margin: -$button-border-width;
  box-sizing: border-box;
  border-left: none;
}

@mixin button__icon--only--sm() {
  @include size($button-sm-height);

  padding: $button__icon-padding--sm;

  // undo border
  margin: -$button-border-width--sm;
}

@mixin button__icon--only--lg() {
  @include size($button-lg-height);

  padding: $button__icon-padding--lg;

  // undo border
  margin: -$button-border-width;
}

@mixin button__arrow() {
  @include icon($button__arrow-width);

  position: absolute;

  top: 50%;

  margin-top: -($button__arrow-width / 2);
}

@mixin button__arrow--lg() {
  @include size($button__arrow-width--lg);

  margin-top: -($button__arrow-width--lg / 2);
}

@mixin button__arrow-right($right: $button-x-padding-default) {
  $right: min-max($button-x-padding-min, $button-x-padding-max, $right);

  right: $right;
}

@mixin button--arrow-adjust($right: $button-x-padding-default) {
  $right: min-max($button-x-padding-min, $button-x-padding-max, $right);

  padding-right: $button__arrow-width + $button__arrow-gap + $right;
}

@mixin button--arrow-adjust--lg($right: $button-x-padding-default) {
  $right: min-max($button-x-padding-min, $button-x-padding-max, $right);

  padding-right: $button__arrow-width--lg + $button__arrow-gap + $right;
}

@mixin button__arrow--motion() {
  animation-duration: $button__arrow-motion-duration;
  animation-timing-function: $button__arrow-motion-easing;
  animation-fill-mode: both;
  animation-name: fadeOutRightInLeft;
}

@mixin button--gpu() {
  @include hardware-accelerate();
}

@mixin button--motion() {
  z-index: $button__motion-z-index;

  overflow: hidden;

  transition: color $button__motion-duration $button__motion-easing 0s;

  &::after {
    position: absolute;
    top: 50%;
    left: 50%;

    z-index: $button__motion-pseudo-z-index;

    display: block;

    // fix iOS double tap for :hover
    // zero width is considered hidden
    width: 0.001px;
    height: 550px;
    content: "";

    transform: translateX(-50%) translateY(-50%) rotate(45deg);
    transition: width $button__motion-duration $button__motion-easing 0s;
  }

  &:hover,
  &:focus {
    &::after {
      width: 110%;
    }
  }
}

@mixin button--motion-style($style: default) {
  $color-button-bg: get-color($button-color, $style, bg);
  $color-button-bg--motion: get-color($button-color, $style, bg--motion);
  $color-button-bg--motion--hover: get-color(
    $button-color,
    $style,
    bg--motion--hover
  );
  $color-button-text--motion--hover: get-color(
    $button-color,
    $style,
    text--motion--hover
  );

  @include button--disabled();

  &::after {
    background: $color-button-bg--motion;
  }

  &:hover,
  &:focus {
    background: $color-button-bg;

    @if $color-button-text--motion--hover {
      color: $color-button-text--motion--hover;
    }

    &::after {
      background: $color-button-bg--motion--hover;
    }
  }
}

@mixin button--motion--ghost() {
  /* stylelint-disable-next-line declaration-no-important */
  background: transparent !important;
}

@mixin button--disabled() {
  &:disabled,
  &[aria-disabled] {
    .m-button__arrow {
      animation-name: none;
    }

    &::after {
      /* stylelint-disable declaration-no-important */
      transform: none !important;
      transition: none !important;
      background-color: transparent !important;
      /* stylelint-enable declaration-no-important */
    }
  }
}
